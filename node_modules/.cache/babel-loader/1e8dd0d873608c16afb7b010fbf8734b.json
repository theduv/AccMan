{"ast":null,"code":"var _jsxFileName = \"/home/speudal/Documents/AccMan/src/Components/PlatformTable.js\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"../Styles/PlatformTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlatformTable = props => {\n  const platform = props.platform;\n  const platformEntries = props.platformEntries;\n  const platformColumns = props.platformColumns;\n  const setPlatformEntries = props.setPlatformEntries;\n  const tableEditable = props.tableEditable;\n  const setPlatformColumns = props.setPlatformColumns;\n\n  const onInputField = (entryIndex, fieldIndex, e) => {\n    const newArray = platformEntries;\n    newArray[entryIndex][fieldIndex] = e.target.textContent;\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n  };\n\n  const onClickRemoveColumn = index => {\n    const res = window.confirm(\"Are you sure that you want to remove this column ?\");\n    if (!res) return;\n    console.log(index);\n    console.log(platformColumns);\n    let newArrayColumns = platformColumns;\n    newArrayColumns.splice(index, 1);\n    const newArrayEntries = platformEntries.map(entry => {\n      let tmp = entry;\n      tmp.splice(index, 1);\n      return tmp;\n    });\n    setPlatformColumns(newArrayColumns);\n    localStorage.setItem(`${platform};columns`, JSON.stringify(newArrayColumns));\n    setPlatformEntries(newArrayEntries);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArrayEntries));\n  };\n\n  const onClickRemove = index => {\n    const confirm = window.confirm(`Are you sure that you want to remove this line ?`);\n    if (!confirm) return;\n    const newArray = platformEntries;\n    newArray.splice(index, 1);\n    console.log(newArray);\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n  };\n\n  const onInputColumn = (index, e) => {\n    const newArray = platformColumns;\n    newArray[index] = e.target.textContent;\n    setPlatformColumns(newArray);\n    localStorage.setItem(`${platform};columns`, JSON.stringify(newArray));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    id: \"platformTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [tableEditable && /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"tableColumnField\",\n          style: {\n            width: \"25px\"\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"tableColumnField\",\n          style: {\n            width: \"2vmin\"\n          },\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), platformColumns.map((name, index) => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            contentEditable: tableEditable,\n            onInput: e => onInputColumn(index, e),\n            className: \"tableColumnField\",\n            children: [name, tableEditable && /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n              value: {\n                color: \"white\"\n              },\n              children: /*#__PURE__*/_jsxDEV(AiOutlineDelete, {\n                className: \"buttonDelete\",\n                onClick: () => onClickRemoveColumn(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      id: \"tableBody\",\n      children: platformEntries.map((entry, mainIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tableRow\",\n          children: [tableEditable && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"tableField\",\n            children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n              value: {\n                color: \"white\"\n              },\n              children: /*#__PURE__*/_jsxDEV(AiOutlineDelete, {\n                onClick: () => onClickRemove(mainIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"tableField\",\n            style: {\n              color: \"white\"\n            },\n            children: mainIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), entry.map((current, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"tableField\",\n            contentEditable: tableEditable,\n            onInput: e => onInputField(mainIndex, index, e),\n            children: current\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this))]\n        }, mainIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlatformTable;\nexport default PlatformTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlatformTable\");","map":{"version":3,"sources":["/home/speudal/Documents/AccMan/src/Components/PlatformTable.js"],"names":["AiOutlineDelete","IconContext","PlatformTable","props","platform","platformEntries","platformColumns","setPlatformEntries","tableEditable","setPlatformColumns","onInputField","entryIndex","fieldIndex","e","newArray","target","textContent","localStorage","setItem","JSON","stringify","onClickRemoveColumn","index","res","window","confirm","console","log","newArrayColumns","splice","newArrayEntries","map","entry","tmp","onClickRemove","onInputColumn","width","name","color","mainIndex","current"],"mappings":"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","sourcesContent":["import { AiOutlineDelete } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"../Styles/PlatformTable.css\";\n\nconst PlatformTable = (props) => {\n  const platform = props.platform;\n  const platformEntries = props.platformEntries;\n  const platformColumns = props.platformColumns;\n  const setPlatformEntries = props.setPlatformEntries;\n  const tableEditable = props.tableEditable;\n  const setPlatformColumns = props.setPlatformColumns;\n\n  const onInputField = (entryIndex, fieldIndex, e) => {\n    const newArray = platformEntries;\n    newArray[entryIndex][fieldIndex] = e.target.textContent;\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n  };\n\n  const onClickRemoveColumn = (index) => {\n    const res = window.confirm(\n      \"Are you sure that you want to remove this column ?\"\n    );\n\n    if (!res) return;\n\n    console.log(index);\n    console.log(platformColumns);\n    let newArrayColumns = platformColumns;\n    newArrayColumns.splice(index, 1);\n    const newArrayEntries = platformEntries.map((entry) => {\n      let tmp = entry;\n      tmp.splice(index, 1);\n      return tmp;\n    });\n\n    setPlatformColumns(newArrayColumns);\n    localStorage.setItem(\n      `${platform};columns`,\n      JSON.stringify(newArrayColumns)\n    );\n    setPlatformEntries(newArrayEntries);\n    localStorage.setItem(\n      `${platform};entries`,\n      JSON.stringify(newArrayEntries)\n    );\n  };\n\n  const onClickRemove = (index) => {\n    const confirm = window.confirm(\n      `Are you sure that you want to remove this line ?`\n    );\n\n    if (!confirm) return;\n    const newArray = platformEntries;\n\n    newArray.splice(index, 1);\n    console.log(newArray);\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n  };\n\n  const onInputColumn = (index, e) => {\n    const newArray = platformColumns;\n\n    newArray[index] = e.target.textContent;\n    setPlatformColumns(newArray);\n    localStorage.setItem(`${platform};columns`, JSON.stringify(newArray));\n  };\n  return (\n    <table id=\"platformTable\">\n      <thead>\n        <tr>\n          {tableEditable && (\n            <th className=\"tableColumnField\" style={{ width: \"25px\" }}>\n              Delete\n            </th>\n          )}\n          <th className=\"tableColumnField\" style={{ width: \"2vmin\" }}>\n            #\n          </th>\n          {platformColumns.map((name, index) => {\n            return (\n              <th\n                contentEditable={tableEditable}\n                onInput={(e) => onInputColumn(index, e)}\n                key={name}\n                className=\"tableColumnField\"\n              >\n                {name}\n                {tableEditable && (\n                  <IconContext.Provider value={{ color: \"white\" }}>\n                    <AiOutlineDelete\n                      className=\"buttonDelete\"\n                      onClick={() => onClickRemoveColumn(index)}\n                    />\n                  </IconContext.Provider>\n                )}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody id=\"tableBody\">\n        {platformEntries.map((entry, mainIndex) => {\n          return (\n            <tr className=\"tableRow\" key={mainIndex}>\n              {tableEditable && (\n                <td className=\"tableField\">\n                  <IconContext.Provider value={{ color: \"white\" }}>\n                    <AiOutlineDelete onClick={() => onClickRemove(mainIndex)} />\n                  </IconContext.Provider>\n                </td>\n              )}\n              <td className=\"tableField\" style={{ color: \"white\" }}>\n                {mainIndex + 1}\n              </td>\n              {entry.map((current, index) => (\n                <td\n                  className=\"tableField\"\n                  key={index}\n                  contentEditable={tableEditable}\n                  onInput={(e) => onInputField(mainIndex, index, e)}\n                >\n                  {current}\n                </td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PlatformTable;\n"]},"metadata":{},"sourceType":"module"}