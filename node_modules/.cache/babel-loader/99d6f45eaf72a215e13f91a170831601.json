{"ast":null,"code":"var _jsxFileName = \"/home/speudal/Documents/accManager/src/Components/Platform.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header.js';\nimport '../Styles/Platform.css';\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Table } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Platform = props => {\n  _s();\n\n  var _JSON$parse;\n\n  const platform = props.match.params.platform;\n  const [platformColumns, setPlatformColumns] = useState((_JSON$parse = JSON.parse(localStorage.getItem(`${platform};columns`))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n  const [addColumn, setAddColumn] = useState(false);\n\n  const onHitEnter = name => {\n    setPlatformColumns([...platformColumns, name]);\n    localStorage.setItem(`${platform};columns`, JSON.stringify([...platformColumns, name]));\n  };\n\n  const toggleAddColumn = () => {\n    setAddColumn(!addColumn);\n  };\n\n  const actionAddEntry = e => {\n    console.log(e);\n  };\n\n  const onKeyDownInputHandler = e => {\n    if (e.key === 'Enter') {\n      onHitEnter(e.target.value);\n      setAddColumn(!addColumn);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"topButtons\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleAddColumn,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add a column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), addColumn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: onKeyDownInputHandler,\n        type: \"text\",\n        placeholder: \"Column name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAddColumn,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dark: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), platformColumns.map(name => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"zebi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), platformColumns.map(name => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 52\n              }, this), \" \"]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: actionAddEntry,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: platformColumns.map(name => {\n        return /*#__PURE__*/_jsxDEV(\"input\", {}, input + name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Platform, \"kJ9uD4EpKn+t1HzXLdk/wWBTDyY=\");\n\n_c = Platform;\nexport default Platform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Platform\");","map":{"version":3,"sources":["/home/speudal/Documents/accManager/src/Components/Platform.js"],"names":["Header","useState","Button","Table","Platform","props","platform","match","params","platformColumns","setPlatformColumns","JSON","parse","localStorage","getItem","addColumn","setAddColumn","onHitEnter","name","setItem","stringify","toggleAddColumn","actionAddEntry","e","console","log","onKeyDownInputHandler","key","target","value","map","input"],"mappings":"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","sourcesContent":["import Header from './Header.js';\nimport '../Styles/Platform.css'\nimport {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport {Table} from 'reactstrap';\n\nconst Platform = (props) => {\n    const platform = props.match.params.platform;\n    const [platformColumns, setPlatformColumns] = useState(JSON.parse(localStorage.getItem(`${platform};columns`)) ?? []);\n    const [addColumn, setAddColumn] = useState(false)\n\n    const onHitEnter = (name) => {\n        setPlatformColumns([...platformColumns, name]);\n        localStorage.setItem(`${platform};columns`, JSON.stringify([...platformColumns, name]))\n    }\n\n    const toggleAddColumn = () => {\n        setAddColumn(!addColumn);\n    }\n\n    const actionAddEntry = (e) => {\n        console.log(e)\n    }\n\n    const onKeyDownInputHandler = (e) => {\n        if (e.key === 'Enter') {\n            onHitEnter(e.target.value);\n            setAddColumn(!addColumn);\n        }\n    }\n\n    return (<div>\n        <Header />\n            <div id='topButtons'>\n                <Button  onClick={toggleAddColumn} variant=\"contained\" color='primary'>Add a column</Button>\n            </div>\n            {addColumn && <div><input onKeyDown={onKeyDownInputHandler} type='text' placeholder='Column name'></input><button onClick={toggleAddColumn}>x</button></div>}\n            <Table dark={true}>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                    {platformColumns.map((name) => {\n                        return (<th key={name}>{name}</th>)\n                    })}\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope='row'>2</th>\n                        <td>test</td>\n                        <td>zebi</td>\n                    </tr>\n                    <tr>\n                        <th scope='row'>?</th>\n                        {platformColumns.map((name) => {\n                            return (<td key={name}><input type='text' name={name}></input> </td>);\n                        })}\n                        <td>\n                        <button onClick={actionAddEntry}>+</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n            <form>\n                {platformColumns.map((name) => {\n                    return (<input key={input + name}></input>)\n                })}\n            </form>\n        </div>)\n}\n\nexport default Platform;"]},"metadata":{},"sourceType":"module"}