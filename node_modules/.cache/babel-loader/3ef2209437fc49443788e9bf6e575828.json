{"ast":null,"code":"var _jsxFileName = \"/home/speudal/Documents/accManager/src/Components/Platform.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Styles/Platform.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Table } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Platform = props => {\n  _s();\n\n  var _JSON$parse, _JSON$parse2;\n\n  const platform = props.match.params.platform;\n  const [platformColumns, setPlatformColumns] = useState((_JSON$parse = JSON.parse(localStorage.getItem(`${platform};columns`))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n  const [platformEntries, setPlatformEntries] = useState((_JSON$parse2 = JSON.parse(localStorage.getItem(`${platform};entries`))) !== null && _JSON$parse2 !== void 0 ? _JSON$parse2 : []);\n  const [addColumn, setAddColumn] = useState(false);\n  const [addEntry, setAddEntry] = useState(false);\n\n  const onHitEnter = name => {\n    setPlatformColumns([...platformColumns, name]);\n    localStorage.setItem(`${platform};columns`, JSON.stringify([...platformColumns, name]));\n  };\n\n  const toggleAddColumn = () => {\n    setAddEntry(false);\n    setAddColumn(!addColumn);\n  };\n\n  const submitNewEntry = e => {\n    e.preventDefault();\n    const children = [...e.target.children].slice(0, -1).map(child => child.value);\n    localStorage.setItem(`${platform};entries`, JSON.stringify([...platformEntries, children]));\n    setPlatformEntries([...platformEntries, children]);\n    const toClear = [...e.target.children];\n    toClear.forEach(elem => {\n      elem.value = \"\";\n    });\n    e.target.children[0].focus();\n  };\n\n  const onKeyDownInputHandler = e => {\n    if (e.key === \"Enter\") {\n      onHitEnter(e.target.value);\n      setAddColumn(!addColumn);\n    }\n  };\n\n  const toggleAddEntry = e => {\n    setAddColumn(false);\n    setAddEntry(!addEntry);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainDivPlatform\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"topTools\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"topButtons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleAddColumn,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add a column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleAddEntry,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add an entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), addEntry && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitNewEntry,\n        children: [platformColumns.map(name => {\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"topInput\",\n            placeholder: name\n          }, \"input\" + name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submitEntry\",\n          type: \"submit\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), addColumn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"topInput\",\n          onKeyDown: onKeyDownInputHandler,\n          type: \"text\",\n          placeholder: \"Column name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submitColumn\",\n          onClick: toggleAddColumn,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      id: \"platformTable\",\n      size: \"sm\",\n      responsive: true,\n      striped: true,\n      dark: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), platformColumns.map(name => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: platformEntries.map((entry, mainIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: mainIndex + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), entry.map((current, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              contentEditable: true,\n              children: current\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Platform, \"UepTn6r+I72cTi80VjQsSUXIArU=\");\n\n_c = Platform;\nexport default Platform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Platform\");","map":{"version":3,"sources":["/home/speudal/Documents/accManager/src/Components/Platform.js"],"names":["Header","useState","Button","Table","Platform","props","platform","match","params","platformColumns","setPlatformColumns","JSON","parse","localStorage","getItem","platformEntries","setPlatformEntries","addColumn","setAddColumn","addEntry","setAddEntry","onHitEnter","name","setItem","stringify","toggleAddColumn","submitNewEntry","e","preventDefault","children","target","slice","map","child","value","toClear","forEach","elem","focus","onKeyDownInputHandler","key","toggleAddEntry","entry","mainIndex","current","index"],"mappings":"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","sourcesContent":["import Header from \"./Header.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Styles/Platform.css\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Table } from \"reactstrap\";\n\nconst Platform = (props) => {\n  const platform = props.match.params.platform;\n  const [platformColumns, setPlatformColumns] = useState(\n    JSON.parse(localStorage.getItem(`${platform};columns`)) ?? []\n  );\n  const [platformEntries, setPlatformEntries] = useState(\n    JSON.parse(localStorage.getItem(`${platform};entries`)) ?? []\n  );\n  const [addColumn, setAddColumn] = useState(false);\n  const [addEntry, setAddEntry] = useState(false);\n\n  const onHitEnter = (name) => {\n    setPlatformColumns([...platformColumns, name]);\n    localStorage.setItem(\n      `${platform};columns`,\n      JSON.stringify([...platformColumns, name])\n    );\n  };\n\n  const toggleAddColumn = () => {\n    setAddEntry(false);\n    setAddColumn(!addColumn);\n  };\n\n  const submitNewEntry = (e) => {\n    e.preventDefault();\n    const children = [...e.target.children]\n      .slice(0, -1)\n      .map((child) => child.value);\n    localStorage.setItem(\n      `${platform};entries`,\n      JSON.stringify([...platformEntries, children])\n    );\n    setPlatformEntries([...platformEntries, children]);\n    const toClear = [...e.target.children];\n    toClear.forEach((elem) => {\n      elem.value = \"\";\n    });\n    e.target.children[0].focus();\n  };\n\n  const onKeyDownInputHandler = (e) => {\n    if (e.key === \"Enter\") {\n      onHitEnter(e.target.value);\n      setAddColumn(!addColumn);\n    }\n  };\n\n  const toggleAddEntry = (e) => {\n    setAddColumn(false);\n    setAddEntry(!addEntry);\n  };\n\n  return (\n    <div id=\"mainDivPlatform\">\n      <Header />\n      <div id=\"topTools\">\n        <div id=\"topButtons\">\n          <Button onClick={toggleAddColumn} variant=\"contained\" color=\"primary\">\n            Add a column\n          </Button>\n          <Button onClick={toggleAddEntry} variant=\"contained\" color=\"primary\">\n            Add an entry\n          </Button>\n        </div>\n        {addEntry && (\n          <form onSubmit={submitNewEntry}>\n            {platformColumns.map((name) => {\n              return (\n                <input\n                  className=\"topInput\"\n                  placeholder={name}\n                  key={\"input\" + name}\n                ></input>\n              );\n            })}\n            <button id=\"submitEntry\" type=\"submit\">\n              +\n            </button>\n          </form>\n        )}\n        {addColumn && (\n          <div>\n            <input\n              className=\"topInput\"\n              onKeyDown={onKeyDownInputHandler}\n              type=\"text\"\n              placeholder=\"Column name\"\n            ></input>\n            <button id=\"submitColumn\" onClick={toggleAddColumn}>\n              x\n            </button>\n          </div>\n        )}\n      </div>\n      <Table\n        id=\"platformTable\"\n        size=\"sm\"\n        responsive={true}\n        striped={true}\n        dark={true}\n      >\n        <thead>\n          <tr>\n            <th>#</th>\n            {platformColumns.map((name) => {\n              return <th key={name}>{name}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {platformEntries.map((entry, mainIndex) => {\n            return (\n              <tr>\n                <td>{mainIndex + 1}</td>\n                {entry.map((current, index) => (\n                  <td contentEditable={true}>{current}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Platform;\n"]},"metadata":{},"sourceType":"module"}