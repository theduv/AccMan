{"ast":null,"code":"var _jsxFileName = \"/home/speudal/Documents/accManager/src/Components/Platform.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header.js';\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Platform = props => {\n  _s();\n\n  var _JSON$parse;\n\n  const platform = props.match.params.platform;\n  const [platformColumns, setPlatformColumns] = useState((_JSON$parse = JSON.parse(localStorage.getItem(`${platform};columns`))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n  const [addColumn, setAddColumn] = useState(false);\n\n  const onHitEnter = name => {\n    setPlatformColumns([...platformColumns, name]);\n    localStorage.setItem(`${platform};columns`, JSON.stringify([...platformColumns, name]));\n  };\n\n  const toggleAddColumn = () => {\n    setAddColumn(!addColumn);\n  };\n\n  const onKeyDownInputHandler = e => {\n    if (e.key === 'Enter') {\n      onHitEnter(e.target.value);\n      setAddColumn(!addColumn);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleAddColumn,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Add a column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), addColumn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: onKeyDownInputHandler,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAddColumn,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 93\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Platform, \"kJ9uD4EpKn+t1HzXLdk/wWBTDyY=\");\n\n_c = Platform;\nexport default Platform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Platform\");","map":{"version":3,"sources":["/home/speudal/Documents/accManager/src/Components/Platform.js"],"names":["Header","useState","Button","DataGrid","Platform","props","platform","match","params","platformColumns","setPlatformColumns","JSON","parse","localStorage","getItem","addColumn","setAddColumn","onHitEnter","name","setItem","stringify","toggleAddColumn","onKeyDownInputHandler","e","key","target","value","columns"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,QAAR,QAAwB,wBAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACxB,QAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,QAApC;AACA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,gBAACU,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,GAAER,QAAS,UAAjC,CAAX,CAAD,qDAA4D,EAA5D,CAAtD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMgB,UAAU,GAAIC,IAAD,IAAU;AACzBR,IAAAA,kBAAkB,CAAC,CAAC,GAAGD,eAAJ,EAAqBS,IAArB,CAAD,CAAlB;AACAL,IAAAA,YAAY,CAACM,OAAb,CAAsB,GAAEb,QAAS,UAAjC,EAA4CK,IAAI,CAACS,SAAL,CAAe,CAAC,GAAGX,eAAJ,EAAqBS,IAArB,CAAf,CAA5C;AACH,GAHD;;AAKA,QAAMG,eAAe,GAAG,MAAM;AAC1BL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,QAAMO,qBAAqB,GAAIC,CAAD,IAAO;AACjC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACnBP,MAAAA,UAAU,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;AACAV,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;AACJ,GALD;;AAOA,sBAAQ;AAAA,4BACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADI,eAEA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEM,eAAjB;AAAkC,MAAA,OAAO,EAAC,WAA1C;AAAsD,MAAA,KAAK,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAGCN,SAAS,iBAAI;AAAA,8BAAK;AAAO,QAAA,SAAS,EAAEO,qBAAlB;AAAyC,QAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAAL,eAAkE;AAAQ,QAAA,OAAO,EAAED,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,YAHd,eAIA,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEM;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAMH,CA3BD;;GAAMvB,Q;;KAAAA,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import Header from './Header.js';\nimport {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport {DataGrid } from '@material-ui/data-grid';\n\nconst Platform = (props) => {\n    const platform = props.match.params.platform;\n    const [platformColumns, setPlatformColumns] = useState(JSON.parse(localStorage.getItem(`${platform};columns`)) ?? []);\n    const [addColumn, setAddColumn] = useState(false)\n\n    const onHitEnter = (name) => {\n        setPlatformColumns([...platformColumns, name]);\n        localStorage.setItem(`${platform};columns`, JSON.stringify([...platformColumns, name]))\n    }\n\n    const toggleAddColumn = () => {\n        setAddColumn(!addColumn);\n    }\n\n    const onKeyDownInputHandler = (e) => {\n        if (e.key === 'Enter') {\n            onHitEnter(e.target.value);\n            setAddColumn(!addColumn);\n        }\n    }\n\n    return (<div>\n        <Header />\n            <Button onClick={toggleAddColumn} variant=\"contained\" color='primary'>Add a column</Button>\n            {addColumn && <div><input onKeyDown={onKeyDownInputHandler} type='text'></input><button onClick={toggleAddColumn}>x</button></div>}\n            <DataGrid columns={columns} />\n        </div>)\n}\n\nexport default Platform;"]},"metadata":{},"sourceType":"module"}