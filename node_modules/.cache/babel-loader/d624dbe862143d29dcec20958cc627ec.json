{"ast":null,"code":"var _jsxFileName = \"/home/speudal/Documents/AccMan/src/Components/PlatformTable.js\";\nimport { Table } from \"reactstrap\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlatformTable = props => {\n  const platform = props.platform;\n  const platformEntries = props.platformEntries;\n  const platformColumns = props.platformColumns;\n  const setPlatformEntries = props.setPlatformEntries;\n  const tableEditable = props.tableEditable;\n  const setPlatformColumns = props.setPlatformColumns;\n\n  const onInputField = (entryIndex, fieldIndex, e) => {\n    console.log(e.target.textContent);\n    const newArray = platformEntries;\n    newArray[entryIndex][fieldIndex] = e.target.textContent;\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n    console.log(entryIndex, fieldIndex);\n  };\n\n  const onClickRemoveColumn = index => {\n    console.log(index);\n    console.log(platformColumns);\n    const newArrayColumns = platformColumns.splice(index, 1);\n    const newArrayEntries = platformEntries.map(entry => {\n      return entry.splice(index);\n    });\n    setPlatformColumns(newArrayColumns);\n    setPlatformEntries(newArrayEntries);\n    localStorage.setItem(`${platform};columns`, JSON.stringify(newArrayColumns));\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArrayEntries));\n  };\n\n  const onClickRemove = index => {\n    const confirm = window.confirm(`Are you sure that you want to remove this line ?`);\n    if (!confirm) return;\n    const newArray = platformEntries.splice(index, index);\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n  };\n\n  const onInputColumn = (index, e) => {\n    const newArray = platformColumns;\n    newArray[index] = e.target.textContent;\n    setPlatformColumns(newArray);\n    localStorage.setItem(`${platform};columns`, JSON.stringify(newArray));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    id: \"platformTable\",\n    size: \"sm\",\n    responsive: true,\n    striped: true,\n    dark: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [tableEditable && /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), platformColumns.map((name, index) => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            contentEditable: tableEditable,\n            onInput: e => onInputColumn(index, e),\n            children: [name, tableEditable && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => onClickRemoveColumn(index),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                style: {\n                  width: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: platformEntries.map((entry, mainIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableEditable && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => onClickRemove(mainIndex),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: mainIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), entry.map((current, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            contentEditable: tableEditable,\n            onInput: e => onInputField(mainIndex, index, e),\n            children: current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlatformTable;\nexport default PlatformTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlatformTable\");","map":{"version":3,"sources":["/home/speudal/Documents/AccMan/src/Components/PlatformTable.js"],"names":["Table","DeleteIcon","Button","PlatformTable","props","platform","platformEntries","platformColumns","setPlatformEntries","tableEditable","setPlatformColumns","onInputField","entryIndex","fieldIndex","e","console","log","target","textContent","newArray","localStorage","setItem","JSON","stringify","onClickRemoveColumn","index","newArrayColumns","splice","newArrayEntries","map","entry","onClickRemove","confirm","window","onInputColumn","name","width","mainIndex","current"],"mappings":";AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,eAAe,GAAGF,KAAK,CAACE,eAA9B;AACA,QAAMC,eAAe,GAAGH,KAAK,CAACG,eAA9B;AACA,QAAMC,kBAAkB,GAAGJ,KAAK,CAACI,kBAAjC;AACA,QAAMC,aAAa,GAAGL,KAAK,CAACK,aAA5B;AACA,QAAMC,kBAAkB,GAAGN,KAAK,CAACM,kBAAjC;;AAEA,QAAMC,YAAY,GAAG,CAACC,UAAD,EAAaC,UAAb,EAAyBC,CAAzB,KAA+B;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,WAArB;AACA,UAAMC,QAAQ,GAAGb,eAAjB;AACAa,IAAAA,QAAQ,CAACP,UAAD,CAAR,CAAqBC,UAArB,IAAmCC,CAAC,CAACG,MAAF,CAASC,WAA5C;AACAV,IAAAA,kBAAkB,CAACW,QAAD,CAAlB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAsB,GAAEhB,QAAS,UAAjC,EAA4CiB,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA5C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAAwBC,UAAxB;AACD,GAPD;;AASA,QAAMW,mBAAmB,GAAIC,KAAD,IAAW;AACrCV,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ;AACA,UAAMmB,eAAe,GAAGnB,eAAe,CAACoB,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B,CAAxB;AACA,UAAMG,eAAe,GAAGtB,eAAe,CAACuB,GAAhB,CAAqBC,KAAD,IAAW;AACrD,aAAOA,KAAK,CAACH,MAAN,CAAaF,KAAb,CAAP;AACD,KAFuB,CAAxB;AAIAf,IAAAA,kBAAkB,CAACgB,eAAD,CAAlB;AACAlB,IAAAA,kBAAkB,CAACoB,eAAD,CAAlB;AACAR,IAAAA,YAAY,CAACC,OAAb,CACG,GAAEhB,QAAS,UADd,EAEEiB,IAAI,CAACC,SAAL,CAAeG,eAAf,CAFF;AAIAN,IAAAA,YAAY,CAACC,OAAb,CACG,GAAEhB,QAAS,UADd,EAEEiB,IAAI,CAACC,SAAL,CAAeK,eAAf,CAFF;AAID,GAlBD;;AAoBA,QAAMG,aAAa,GAAIN,KAAD,IAAW;AAC/B,UAAMO,OAAO,GAAGC,MAAM,CAACD,OAAP,CACb,kDADa,CAAhB;AAIA,QAAI,CAACA,OAAL,EAAc;AACd,UAAMb,QAAQ,GAAGb,eAAe,CAACqB,MAAhB,CAAuBF,KAAvB,EAA8BA,KAA9B,CAAjB;AACAjB,IAAAA,kBAAkB,CAACW,QAAD,CAAlB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAsB,GAAEhB,QAAS,UAAjC,EAA4CiB,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA5C;AACD,GATD;;AAWA,QAAMe,aAAa,GAAG,CAACT,KAAD,EAAQX,CAAR,KAAc;AAClC,UAAMK,QAAQ,GAAGZ,eAAjB;AAEAY,IAAAA,QAAQ,CAACM,KAAD,CAAR,GAAkBX,CAAC,CAACG,MAAF,CAASC,WAA3B;AACAR,IAAAA,kBAAkB,CAACS,QAAD,CAAlB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAsB,GAAEhB,QAAS,UAAjC,EAA4CiB,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA5C;AACD,GAND;;AAOA,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,OAAO,EAAE,IAJX;AAKE,IAAA,IAAI,EAAE,IALR;AAAA,4BAOE;AAAA,6BACE;AAAA,mBACGV,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGF,eAAe,CAACsB,GAAhB,CAAoB,CAACM,IAAD,EAAOV,KAAP,KAAiB;AACpC,8BACE;AACE,YAAA,eAAe,EAAEhB,aADnB;AAEE,YAAA,OAAO,EAAGK,CAAD,IAAOoB,aAAa,CAACT,KAAD,EAAQX,CAAR,CAF/B;AAAA,uBAKGqB,IALH,EAMG1B,aAAa,iBACZ,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAMe,mBAAmB,CAACC,KAAD,CAA1C;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAE;AAAEW,kBAAAA,KAAK,EAAE;AAAT;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aAGOD,IAHP;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SAfA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eA6BE;AAAA,gBACG7B,eAAe,CAACuB,GAAhB,CAAoB,CAACC,KAAD,EAAQO,SAAR,KAAsB;AACzC,4BACE;AAAA,qBACG5B,aAAa,iBACZ,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMsB,aAAa,CAACM,SAAD,CAApC;AAAA,mCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAME;AAAA,sBAAKA,SAAS,GAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,kBANF,EAOGP,KAAK,CAACD,GAAN,CAAU,CAACS,OAAD,EAAUb,KAAV,kBACT;AACE,YAAA,eAAe,EAAEhB,aADnB;AAEE,YAAA,OAAO,EAAGK,CAAD,IAAOH,YAAY,CAAC0B,SAAD,EAAYZ,KAAZ,EAAmBX,CAAnB,CAF9B;AAAA,sBAIGwB;AAJH;AAAA;AAAA;AAAA;AAAA,kBADD,CAPH,eAeE;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAmBD,OApBA;AADH;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CA9GD;;KAAMnC,a;AAgHN,eAAeA,aAAf","sourcesContent":["import { Table } from \"reactstrap\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"@material-ui/core/Button\";\n\nconst PlatformTable = (props) => {\n  const platform = props.platform;\n  const platformEntries = props.platformEntries;\n  const platformColumns = props.platformColumns;\n  const setPlatformEntries = props.setPlatformEntries;\n  const tableEditable = props.tableEditable;\n  const setPlatformColumns = props.setPlatformColumns;\n\n  const onInputField = (entryIndex, fieldIndex, e) => {\n    console.log(e.target.textContent);\n    const newArray = platformEntries;\n    newArray[entryIndex][fieldIndex] = e.target.textContent;\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n    console.log(entryIndex, fieldIndex);\n  };\n\n  const onClickRemoveColumn = (index) => {\n    console.log(index);\n    console.log(platformColumns);\n    const newArrayColumns = platformColumns.splice(index, 1);\n    const newArrayEntries = platformEntries.map((entry) => {\n      return entry.splice(index);\n    });\n\n    setPlatformColumns(newArrayColumns);\n    setPlatformEntries(newArrayEntries);\n    localStorage.setItem(\n      `${platform};columns`,\n      JSON.stringify(newArrayColumns)\n    );\n    localStorage.setItem(\n      `${platform};entries`,\n      JSON.stringify(newArrayEntries)\n    );\n  };\n\n  const onClickRemove = (index) => {\n    const confirm = window.confirm(\n      `Are you sure that you want to remove this line ?`\n    );\n\n    if (!confirm) return;\n    const newArray = platformEntries.splice(index, index);\n    setPlatformEntries(newArray);\n    localStorage.setItem(`${platform};entries`, JSON.stringify(newArray));\n  };\n\n  const onInputColumn = (index, e) => {\n    const newArray = platformColumns;\n\n    newArray[index] = e.target.textContent;\n    setPlatformColumns(newArray);\n    localStorage.setItem(`${platform};columns`, JSON.stringify(newArray));\n  };\n  return (\n    <Table\n      id=\"platformTable\"\n      size=\"sm\"\n      responsive={true}\n      striped={true}\n      dark={true}\n    >\n      <thead>\n        <tr>\n          {tableEditable && <th>Delete</th>}\n          <th>#</th>\n          {platformColumns.map((name, index) => {\n            return (\n              <th\n                contentEditable={tableEditable}\n                onInput={(e) => onInputColumn(index, e)}\n                key={name}\n              >\n                {name}\n                {tableEditable && (\n                  <Button onClick={() => onClickRemoveColumn(index)}>\n                    <DeleteIcon style={{ width: \"50%\" }} />\n                  </Button>\n                )}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {platformEntries.map((entry, mainIndex) => {\n          return (\n            <tr>\n              {tableEditable && (\n                <Button onClick={() => onClickRemove(mainIndex)}>\n                  <DeleteIcon />\n                </Button>\n              )}\n              <td>{mainIndex + 1}</td>\n              {entry.map((current, index) => (\n                <td\n                  contentEditable={tableEditable}\n                  onInput={(e) => onInputField(mainIndex, index, e)}\n                >\n                  {current}\n                </td>\n              ))}\n              <td></td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default PlatformTable;\n"]},"metadata":{},"sourceType":"module"}